<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
         "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mid.mypage.repo.OrderDAO">

  <!--
    회원별 주문 목록 조회 (상품명 포함)
    - 파라미터: memNo (회원번호)
    - 반환: OrderVO 리스트 (주문+상품 정보)
    - ORDERS, ORDERS_DETAIL, PRODUCT 테이블 조인
    - 주문일자 내림차순 정렬
  -->
  <select id="getOrderList" parameterType="string" resultType="com.mid.mypage.model.OrderVO">
    SELECT 
      o.order_no as orderNo,               <!-- 주문번호 -->
      p.product_name as productName,       <!-- 상품명 -->
      o.order_status as orderStatus,       <!-- 주문현황 -->
      o.order_date as orderDate,           <!-- 주문일자 -->
      p.product_price as productPrice      <!-- 상품금액 -->
    FROM 
      ORDERS o
    JOIN 
      ORDERS_DETAIL od ON o.order_no = od.order_no <!-- 주문상세 조인 -->
    JOIN 
      PRODUCT p ON od.product_no = p.product_no   <!-- 상품 정보 조인 -->
    WHERE
      o.mem_no = #{memNo} <!-- 회원별 주문 -->
    ORDER BY 
      o.order_date DESC <!-- 최신 주문 먼저 -->
  </select>

  <!--
    회원ID로 주문 목록 조회 (상품 정보 없이 주문 정보만)
    - 파라미터: memId (회원ID)
    - 반환: OrderVO 리스트 (주문 정보)
    - MEMBER 테이블에서 memId로 memNo 조회 후 ORDERS에서 주문 조회
    - 주문일자 내림차순 정렬
  -->
  <select id="getOrderListByMemberId" parameterType="string" resultType="com.mid.mypage.model.OrderVO">
    SELECT
      o.ORDER_NO as orderNo,         <!-- 주문번호 -->
      o.ORDER_STATUS as orderStatus, <!-- 주문상태 -->
      o.ORDER_DATE as orderDate      <!-- 주문일자 -->
    FROM
      ORDERS o
    WHERE
      o.MEM_NO = (SELECT MEM_NO FROM MEMBER WHERE MEM_ID = #{memId}) <!-- 회원ID로 회원번호 조회 후 주문 -->
    ORDER BY
      o.ORDER_DATE DESC <!-- 최신 주문 먼저 -->
  </select>

  <!--
    주문/회원/상품 데이터 현황 체크용(로깅/디버깅)
    - 파라미터: memId (회원ID)
    - 반환: map (여러 통계값)
    - 전체 주문수, 회원 존재여부, 회원번호, 회원별 주문수, 전체 주문상세수, 전체 상품수
    - DUAL: 오라클에서 더미 row 반환용
  -->
  <select id="checkOrderData" parameterType="string" resultType="map">
    SELECT 
      (SELECT COUNT(*) FROM ORDERS) as totalOrders, <!-- 전체 주문 수 -->
      (SELECT COUNT(*) FROM MEMBER WHERE MEM_ID = #{memId}) as memberCount, <!-- 해당 ID 회원 존재여부 -->
      (SELECT MEM_NO FROM MEMBER WHERE MEM_ID = #{memId}) as memNo, <!-- 회원번호 -->
      (SELECT COUNT(*) FROM ORDERS WHERE MEM_NO = (SELECT MEM_NO FROM MEMBER WHERE MEM_ID = #{memId})) as memberOrderCount, <!-- 회원별 주문수 -->
      (SELECT COUNT(*) FROM ORDERS_DETAIL) as totalOrderDetails, <!-- 전체 주문상세 수 -->
      (SELECT COUNT(*) FROM PRODUCT) as totalProducts <!-- 전체 상품 수 -->
    FROM DUAL
  </select>

</mapper>
